varying vec3 vertex_normal, light_vector; //정점 쉐이더와 프래그먼트 쉐이더 사이에서 공유될 수 있는 데이터 타입
varying float distance;
void main(){
	vertex_normal = normalize(gl_Normal); //지엘의 법선 벡터 정규화
	gl_Position = ftransform(); //ftransform은 지엘의 고정기능에 의한 변환, gl_position은 4차원 동차 좌표
	vec3 vertex_position;
	vertex_position.x = gl_Position.x/gl_Position.w;
	vertex_position.y = gl_Position.y/gl_Position.w;
	vertex_position.z = gl_Position.z/gl_Position.w;
	vec3 light_position;
	light_position.x = gl_LightSource[0].position.x/gl_LightSource[0].position.w;
	light_position.y = gl_LightSource[0].position.y/gl_LightSource[0].position.w;
	light_position.z = gl_LightSource[0].position.z/gl_LightSource[0].position.w;
	light_vector = normalize(light_position);
	distance = distance(vertex_position, light_position); //광원과 정점간의 거리 계산
}
