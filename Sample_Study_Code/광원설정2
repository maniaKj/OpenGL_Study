#include "Include/GL/freeglut.h"

static int SpinAngle = 0;

void LightInit() {
	GLfloat global_ambient[] = { 0.1, 0.1, 0.1, 1.0 };

	GLfloat light0_ambient[] = { 0.5, 0.4, 0.3, 1.0 };
	GLfloat light0_diffuse[] = { 0.8, 0.7, 0.6, 1.0 };
	GLfloat light0_specular[] = { 1.0, 1.0, 1.0, 1.0 };
	
	GLfloat light1_ambient[] = { 0.4, 0.4, 0.4, 1.0 };
	GLfloat light1_diffuse[] = { 0.9, 0.9, 0.9, 1.0 };
	GLfloat light1_specular[] = { 1.0, 1.0, 1.0, 1.0 };

	GLfloat material_ambient[] = { 0.4, 0.4, 0.4, 1.0 };
	GLfloat material_diffuse[] = { 0.9, 0.9, 0.9, 1.0 };
	GLfloat material_specular[] = { 1.0, 1.0, 1.0, 1.0 };
	GLfloat material_shininess[] = { 25.0 };

	glShadeModel(GL_SMOOTH); 
	glEnable(GL_DEPTH_TEST);
	glEnable(GL_LIGHTING); 

	glEnable(GL_LIGHT0);
	glLightfv(GL_LIGHT0, GL_AMBIENT, light0_ambient);
	glLightfv(GL_LIGHT0, GL_DIFFUSE, light0_diffuse);
	glLightfv(GL_LIGHT0, GL_SPECULAR, light0_specular);
}

void display() {
	GLfloat LightPosition[] = { 0.0, 0.0, 1.5, 1.0 };
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	glPushMatrix(); // 이전 변환 행렬 저장
	glTranslatef(0.0, 0.0, -5.0); //z축으로 5만큼 이동
	glPushMatrix();
	glRotatef(SpinAngle, 1.0, 0.0, 0.0); //좌표계를 x축으로 회전
	glLightfv(GL_LIGHT0, GL_POSITION, LightPosition); //현재 좌표계에서 z축으로 1.5만큼 떨어진 곳에 광원 위치
	glTranslatef(0.0, 0.0, 1.5); //좌표계 이동
	glDisable(GL_LIGHTING); // 조명이 활성화되면 glColor3f에 의한 색은 모두 무시 -> 비활성화 필요
	glColor3f(0.9, 0.9, 0.9);
	glutWireSphere(0.06, 10, 10); //백색 와이어 프레임으로 원구 그리기
	glEnable(GL_LIGHTING); //다시 조명 활성화
	glPopMatrix();
	glutSolidSphere(1.0, 200, 200); // 실제 조명을 받는 원구 그리기, popmatrix가 적용되었으므로 z축으로 -5만큼 떨어진 지점에서 그린다
	glPopMatrix();
	glFlush();
}

void reshape(int w, int h) {
	glViewport(0, 0, (GLsizei)w, (GLsizei)h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity(); 
	gluPerspective(40.0, (GLfloat)w / (GLfloat)h, 1.0, 20.0);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
}

void mouse(int button, int state, int x, int y) {
	switch (button) {
	case GLUT_LEFT_BUTTON :
		if (state == GLUT_DOWN) {
			SpinAngle = (SpinAngle + 15) % 360;
			glutPostRedisplay();
		}
		break;
	default:
		break;
	}
}

int main(int argc, char **argv) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA | GLUT_DEPTH);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(100, 100);
	glutCreateWindow("OpenGL Studying Sample");
	LightInit();
	glutDisplayFunc(display);
	glutReshapeFunc(reshape);
	glutMouseFunc(mouse);
	glutMainLoop();
	return 0;
}
