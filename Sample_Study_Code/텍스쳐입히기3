//Glaux 사용 예시. 메인 함수에 사진 파일 인자 적용
//사진의 경우 가로 세로 인자 수가 16의 배수, 24/32비트 컬러만 지원,  bmp파일이어야 함
#include "Include/GL/glut.h"
#include "Include/GL/GLU.H"
#include "Include/GL/GLAux.h" // auxDIGImageLoad() 함수 사용
#include <stdio.h>
#pragma comment (lib, "Lib/Glaux.lib") //glaux 쓰려면 해줘야 함
#pragma comment (lib, "legacy_stdio_definitions.lib")  //glaux 쓰려면 해줘야 함.

GLfloat xrot, yrot, zrot;
unsigned int MyTextureObject[1];
AUX_RGBImageRec *pTextureImage[1];

void Reshape(int w, int h) {
	glViewport(0, 0, w, h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluPerspective(40., (GLfloat)w / (GLfloat)h, 1., 100.);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	gluLookAt(0., 0., 5., 0., 0., 0., 0., 1., 0.);
	glTranslatef(0., 0., -1.);
}

void display() {
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	glBindTexture(GL_TEXTURE_2D, MyTextureObject[0]);
	glBegin(GL_QUADS);
	glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f, 1.0f);// 앞면
	glTexCoord2f(1.0f, 0.0f); glVertex3f(1.0f, -1.0f, 1.0f);
	glTexCoord2f(1.0f, 1.0f); glVertex3f(1.0f, 1.0f, 1.0f);
	glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f, 1.0f, 1.0f);

	glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f); //뒷면
	glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, 1.0f, -1.0f);
	glTexCoord2f(0.0f, 1.0f); glVertex3f(1.0f, 1.0f, -1.0f);
	glTexCoord2f(0.0f, 1.0f); glVertex3f(1.0f, -1.0f, -1.0f);

	glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f, 1.0f, -1.0f); //윗면
	glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, 1.0f, 1.0f);
	glTexCoord2f(1.0f, 0.0f); glVertex3f(1.0f, 1.0f, 1.0f);
	glTexCoord2f(1.0f, 1.0f); glVertex3f(1.0f, 1.0f, -1.0f);

	glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, -1.0f, -1.0f); //오른쪽 옆면 ?아랫면 아냐?
	glTexCoord2f(0.0f, 1.f); glVertex3f(1.0f, -1.0f, -1.0f);
	glTexCoord2f(0.0f, 0.f); glVertex3f(1.0f, -1.0f, 1.0f);
	glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, 1.0f);

	glTexCoord2f(1.0f, 0.0f); glVertex3f(1.0f, -1.0f, -1.0f); //오른쪽 옆면
	glTexCoord2f(1.0f, 1.0f); glVertex3f(1.0f, 1.0f, -1.0f);
	glTexCoord2f(0.0f, 1.0f); glVertex3f(1.0f, 1.0f, 1.0f);
	glTexCoord2f(0.0f, 0.0f); glVertex3f(1.0f, -1.0f, 1.0f);

	glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f); //왼쪽 옆면
	glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, 1.0f);
	glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, 1.0f, 1.0f);
	glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f, 1.0f, -1.0f);
	glEnd();
	glutSwapBuffers();
}

void Timer(int value) {
	glRotatef(xrot, 1.0f, 0.0f, 0.0f); glRotatef(yrot, 0.0f, 1.0f, 0.0f);
	glRotatef(zrot, 0.0f, 0.0f, 1.0f);
	xrot = 1.f; yrot = 2.f; zrot = 5.f;
	glutPostRedisplay();
	glutTimerFunc(16, Timer, 1);
}

AUX_RGBImageRec * LoadBMP(char *szFilename) {
	FILE * pFile = NULL;
	if (!szFilename) {
		return NULL;
	}
	pFile = fopen(szFilename, "r");
	if (pFile) {
		fclose(pFile);
		return auxDIBImageLoad((LPCSTR)szFilename); //파일에서 메모리로
	}
	return NULL;
}

//파일을 로드하고 텍스쳐로 변환
int LoadGLTextures(char * szFilePath) {
	int status = FALSE;
	glClearColor(0.0, 0.0, 0.0, 0.5);
	memset(pTextureImage, 0, sizeof(void *) * 1); //포인터를 널로
	//비트맵을 로드하고 오류 확인
	if (pTextureImage[0] = LoadBMP(szFilePath)) {
		status = TRUE;  //상태플래그를 트루상태로
		glGenTextures(1, &MyTextureObject[0]); //텍스쳐 생성
		glBindTexture(GL_TEXTURE_2D, MyTextureObject[0]);
		glTexImage2D(GL_TEXTURE_2D, 0, 3, pTextureImage[0]->sizeX, pTextureImage[0]->sizeY, 0, GL_RGB, GL_UNSIGNED_BYTE, pTextureImage[0]->data);
		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
		glEnable(GL_TEXTURE_2D);
	}
	if (pTextureImage[0]) { //텍스쳐가 존재하면
		if (pTextureImage[0]->data) {
			free(pTextureImage[0]->data); //텍스쳐 영상이 존재하면 공간 반납
		}
		free(pTextureImage[0]); //텍스쳐 반납
	}
	return status;
}

int main(int argc, char *argv[]) {
	if (argc <= 1) {
		printf("\n%s\n\n", "Usage : TextureDLG3_Consol.exe [BMPFileName.bmp]");
		exit(1);
	}
	else if (argc > 2) {
		printf("\nToo Many Arguments!\nArgument is Only one\n");
		exit(1);
	}
	else {
		glutInit(&argc, argv);
		glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
		glutCreateWindow("OpenGL Studying Sample");
		glutDisplayFunc(display);
		glutReshapeFunc(Reshape);
		glutTimerFunc(16, Timer, 1);
		if (LoadGLTextures(argv[1])) {
			glEnable(GL_TEXTURE_2D);
			glShadeModel(GL_SMOOTH);
			glClearDepth(1.0);
			glEnable(GL_DEPTH_TEST);
			glDepthFunc(GL_LEQUAL);
			glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);
			glutMainLoop();
		}
		printf("\n Argument : %s  \n", argv[1]);
	}
	return 0;
}
